// should compile
/* Comment testing

/* <- this should work

*/

// Inline test

program /* comment between tokens */ weird
    declare x, y, z enddeclare

    function function1()
        declare index, result enddeclare

        // time to forcase:
        forcase
            when index < 10:
                repeat
                    if 2 + 2 = 4 then
                    else
                        /* more
                        comments
                        here
                        */
                        if 4 - 1 = 3 then
                        endif
                    endif;
		    index := 11;
		    exit
                endrepeat;    

                result := result + index

            when index = 10:
                result := 10;
        endforcase;

        return result
    endfunction

    function func0(in var)
        return var * function1()
    endfunction

    function procedure1(in a, inout b, inout three) // procedure1 should work as procedure name
        declare heyhey, function0 enddeclare // function0 should work as id

        // checking switch out
        switch 42
            case 42:
                heyhey := 42;
                function0 := func0(in heyhey)
            case 69:
                heyhey := 69;
                function0 := 11111;
            case 9999:
                heyhey := 9999;
                    if 1 <> 1 then
                        return -1
                    endif
        endswitch;

        return a + b * three / function0
    endfunction
    
    x := 1;
    input y;

    print x + y + procedure1(in x, inout y, inout z)
endprogram
